{"ast":null,"code":"var _jsxFileName = \"/Users/rohanchopra/Documents/gitrohangit/click-counter/src/ClickCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport L from 'leaflet';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickCounter() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [location, setLocation] = useState(null);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    // fetch the locations from the database\n    async function fetchLocations() {\n      const response = await fetch('/api/clicks');\n      if (response.ok) {\n        const data = await response.json();\n        setLocations(data);\n      } else {\n        console.error(response.statusText);\n      }\n    }\n    fetchLocations();\n  }, []);\n  async function handleClick() {\n    getLocation();\n    const response = await fetch('/api/clicks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        location\n      })\n    });\n    if (response.ok) {\n      setCount(count + 1);\n      setLocations([...locations, location]);\n    } else {\n      console.error(response.statusText);\n    }\n  }\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      locations: locations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ClickCounter, \"Ffz8qPzs/BUGJDUWXvRqBhehHjo=\");\n_c = ClickCounter;\nexport default ClickCounter;\nvar _c;\n$RefreshReg$(_c, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","L","Map","jsxDEV","_jsxDEV","ClickCounter","_s","count","setCount","location","setLocation","locations","setLocations","fetchLocations","response","fetch","ok","data","json","console","error","statusText","handleClick","getLocation","method","headers","body","JSON","stringify","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohanchopra/Documents/gitrohangit/click-counter/src/ClickCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport L from 'leaflet';\nimport Map from './Map';\n\nfunction ClickCounter() {\n  const [count, setCount] = useState(0);\n  const [location, setLocation] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    // fetch the locations from the database\n    async function fetchLocations() {\n      const response = await fetch('/api/clicks');\n      if (response.ok) {\n        const data = await response.json();\n        setLocations(data);\n      } else {\n        console.error(response.statusText);\n      }\n    }\n\n    fetchLocations();\n  }, []);\n\n  async function handleClick() {\n    getLocation();\n\n    const response = await fetch('/api/clicks', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ location })\n    });\n\n    if (response.ok) {\n      setCount(count + 1);\n      setLocations([...locations, location]);\n    } else {\n      console.error(response.statusText);\n    }\n  }\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Click me!</button>\n      <p>Count: {count}</p>\n      <Map locations={locations} />\n    </div>\n  );\n}\n\nexport default ClickCounter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,eAAea,cAAcA,CAAA,EAAG;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAClCN,YAAY,CAACK,IAAI,CAAC;MACpB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;MACpC;IACF;IAEAR,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeS,WAAWA,CAAA,EAAG;IAC3BC,WAAW,EAAE;IAEb,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC1CS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEnB;MAAS,CAAC;IACnC,CAAC,CAAC;IAEF,IAAIK,QAAQ,CAACE,EAAE,EAAE;MACfR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACnBK,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEF,QAAQ,CAAC,CAAC;IACxC,CAAC,MAAM;MACLU,OAAO,CAACC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;IACpC;EACF;EAEA,SAASE,WAAWA,CAAA,EAAG;IACrBM,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtCC,QAAQ,IAAI;MACVtB,WAAW,CAAC;QACVuB,GAAG,EAAED,QAAQ,CAACE,MAAM,CAACC,QAAQ;QAC7BC,GAAG,EAAEJ,QAAQ,CAACE,MAAM,CAACG;MACvB,CAAC,CAAC;IACJ,CAAC,EACDjB,KAAK,IAAI;MACPD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEA,oBACEhB,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAQmC,OAAO,EAAEjB,WAAY;MAAAgB,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChDvC,OAAA;MAAAkC,QAAA,GAAG,SAAO,EAAC/B,KAAK;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBvC,OAAA,CAACF,GAAG;MAACS,SAAS,EAAEA;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEV;AAACrC,EAAA,CA1DQD,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA4DrB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}